---
import Container from "./Container.astro";
import Dropdown from "./Dropdown";
import ButtonDarkMode from "./ButtonDarkMode.astro";

const ENLACES = [
  { href: "#experiencia", title: "Experiencia" },
  { href: "#proyectos", title: "Proyectos" },
  { href: "#sobremi", title: "Sobre m√≠" },
];
---

<header
  id="header"
  class="z-10 bg-white dark:bg-slate-800 sticky top-0 left-0 right-0 shadow-sm"
>
  <Container class="flex items-center w-auto">
    <nav class="flex pt-1 flex-1" id="navbar-no-sticky">
      {
        ENLACES.map(({ href, title }) => {
          return (
            <a
              class="p-4 flex justify-center items-center text-nowrap
                    font-semibold text-regular text-slate-700 dark:text-white
                    border-b-[3px] border-transparent hover:border-b-primary
                    hover:bg-slate-100 dark:hover:bg-slate-700 rounded-md
                "
              href={href}
            >
              {title}
            </a>
          );
        })
      }
    </nav>
    <nav
      class="sr-only flex justify-between items-center py-2 flex-1"
      id="navbar-sticky"
    >
      <div class="flex gap-x-3 items-center">
        <img
          src="/perfil.webp"
          class="size-[40px] rounded-full border-white"
          alt="Imagen de perfil de portafolio"
        />
        <div class="flex items-end gap-x-3">
          <h1 class="text-xl font-bold text-nowrap">Jose Flores</h1>
        </div>
      </div>
      <Dropdown client:only="react" />
    </nav>
    <!-- <div class="w-full flex justify-end"> -->
    <ButtonDarkMode />
    <!-- </div> -->
  </Container>
</header>

<script>
  const header = document.getElementById("header");
  const navbarNoSticky = document.getElementById("navbar-no-sticky");
  const navbarSticky = document.getElementById("navbar-sticky");

  const alObservar = (entradas, observador) => {
    const elemento = entradas[0];

    if (elemento.isIntersecting) {
      navbarNoSticky.classList.add("sr-only");
      navbarSticky.classList.remove("sr-only");
    } else {
      navbarNoSticky.classList.remove("sr-only");
      navbarSticky.classList.add("sr-only");
    }
  };

  const observador = new IntersectionObserver(alObservar, {
    threshold: 0.1,
    rootMargin: "0px 0px -95% 0px",
  });

  observador.observe(header);
</script>
